# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker: # use the docker executor type; machine and macos executors are also supported
      - image: circleci/python:3.6.1
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "req.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r req.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "req.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test
#       - run:
#           name: install docker
#           command: |
#             sudo apt-get remove docker docker-engine docker.io containerd runc
#             sudo apt-get update
#             sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
#             curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#             sudo apt-get update
#             sudo apt-get install docker-ce docker-ce-cli containerd.io

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            wget -P /tmp -L https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xvzf /tmp/docker-$VER.tgz -C /tmp 
            sudo mv -f /tmp/docker/docker* /usr/bin
            sudo mv -f /tmp/docker/completion/* /usr/bin/completion
      - run:
         name: Build Docker image
         command: |
            
            sudo docker build -t hello_world .
      - run:
          name: Push to DockerHub
          command: |
            sudo docker login -u$DOCKERHUB_LOGIN -p$DOCKERHUB_PASSWORD
            sudo docker push formage/movies-store
